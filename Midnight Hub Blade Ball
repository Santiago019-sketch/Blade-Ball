-- FPS Cap & Initial Setup
setfpscap(120)
local Library = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()
local Window = Library.CreateLib("Blade Ball GUI", "LightTheme")

-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

-- Variables
local Player = Players.LocalPlayer
local Balls = workspace:WaitForChild("Balls")
local Remote = ReplicatedStorage:WaitForChild("Remote")

-- Main Combat Tab
local MainTab = Window:NewTab("Combat")
local CombatSection = MainTab:NewSection("Combat")

-- Auto Parry
CombatSection:NewToggle("Auto Parry", "Automatically parries incoming balls", function(state)
    local function calculatePredictionTime(ball, player)
        local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local velocity = ball.Velocity + rootPart.Velocity
            return relativePosition.magnitude / velocity.magnitude
        end
        return math.huge
    end

    if state then
        RunService.Heartbeat:Connect(function()
            if Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                for _, ball in ipairs(Balls:GetChildren()) do
                    local realBall = ball:GetAttribute("realBall")
                    local target = ball:GetAttribute("target")
                    local predictionTime = calculatePredictionTime(ball, Player)

                    if realBall and target == Player.Name and predictionTime <= 0.5 then
                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, nil)
                        task.wait(0.005)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, nil)
                        break
                    end
                end
            end
        end)
    end
end)

-- Utility Tab
local UtilityTab = Window:NewTab("Utility")
local UtilitySection = UtilityTab:NewSection("Features")

-- Ball Follow
UtilitySection:NewToggle("Follow Ball", "Automatically follow the ball", function(state)
    if state then
        task.spawn(function()
            while true do
                task.wait()
                local ball = Balls:FindFirstChildOfClass("Part")
                if ball and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                    Player.Character.HumanoidRootPart.CFrame = ball.CFrame
                end
            end
        end)
    end
end)

-- Night Mode
UtilitySection:NewToggle("Night Mode", "Toggle night mode", function(state)
    if state then
        Lighting.ClockTime = 3.9
    else
        Lighting.ClockTime = 13.5
    end
end)

-- Shop Tab
local ShopTab = Window:NewTab("Shop")
local ShopSection = ShopTab:NewSection("Crates")

-- Buy Crates
ShopSection:NewButton("Buy Sword Crate", "Purchase sword crate", function()
    Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
end)

ShopSection:NewButton("Buy Explosion Crate", "Purchase explosion crate", function()
    Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
end)

-- Auto Buy Toggles
ShopSection:NewToggle("Auto Buy Sword Crate", "Automatically buy sword crates", function(state)
    task.spawn(function()
        while state do
            task.wait(0.01)
            Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
        end
    end)
end)

ShopSection:NewToggle("Auto Buy Explosion Crate", "Automatically buy explosion crates", function(state)
    task.spawn(function()
        while state do
            task.wait(0.01)
            Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
        end
    end)
end)

-- Settings Tab
local SettingsTab = Window:NewTab("Settings")
local SettingsSection = SettingsTab:NewSection("Configuration")

SettingsSection:NewSlider("Parry Distance", "Adjust auto parry distance", 1, 20, 10, function(value)
    getgenv().ParryDistance = value
end)

SettingsSection:NewKeybind("Toggle GUI", "Toggle the GUI visibility", Enum.KeyCode.RightControl, function()
    Library:ToggleUI()
end)
