-- FPS Cap & Initial Setup
setfpscap(120)
local Library = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()
local Window = Library.CreateLib("Blade Ball GUI", "LightTheme")

-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

-- Variables
local Player = Players.LocalPlayer
local Balls = workspace:WaitForChild("Balls")
local Remote = ReplicatedStorage:WaitForChild("Remote")

-- Main Combat Tab
local MainTab = Window:NewTab("Combat")
local CombatSection = MainTab:NewSection("Combat")

-- Auto Parry
CombatSection:NewToggle("Auto Parry", "Automatically parries incoming balls", function(state)
    local lastBallPressed, isKeyPressed = nil, false

    local function calculatePredictionTime(ball, player)
        local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local velocity = ball.Velocity + rootPart.Velocity 
            local a = ball.Size.magnitude / 2
            local b = relativePosition.magnitude
            local c = math.sqrt(a * a + b * b)
            return (c - a) / velocity.magnitude
        end
        return math.huge
    end

    local function checkProximityToPlayer(ball, player)
        local predictionTime = calculatePredictionTime(ball, player)
        local realBallAttribute = ball:GetAttribute("realBall")
        local target = ball:GetAttribute("target")
        local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.magnitude * 0.01)
        
        if predictionTime <= ballSpeedThreshold and realBallAttribute and target == player.Name and not isKeyPressed then
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, nil)
            task.wait(0.005)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, nil)
            lastBallPressed = ball
            isKeyPressed = true
        elseif lastBallPressed == ball and (predictionTime > ballSpeedThreshold or not realBallAttribute or target ~= player.Name) then
            isKeyPressed = false
        end
    end

    if state then
        RunService.Heartbeat:Connect(function()
            if Player then
                for _, ball in pairs(Balls:GetChildren()) do
                    checkProximityToPlayer(ball, Player)
                end
            end
        end)
    end
end)

-- Manual Spam
CombatSection:NewButton("Manual Spam", "Opens manual spam UI", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Atreus-Hub/Open-Source/main/manual%20spam"))()
end)

-- Utility Tab
local UtilityTab = Window:NewTab("Utility")
local UtilitySection = UtilityTab:NewSection("Features")

-- Ball Follow
UtilitySection:NewToggle("Follow Ball", "Automatically follow the ball", function(state)
    getgenv().FollowBall = state
    
    task.spawn(function()
        local currentTween = nil
        
        while true do
            task.wait()
            if getgenv().FollowBall then
                local ball = Balls:FindFirstChildOfClass("Part")
                local char = Player.Character
                
                if ball and char and char:FindFirstChild("HumanoidRootPart") then
                    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, false, 0)
                    local distance = (char.HumanoidRootPart.Position - ball.Position).Magnitude
                    
                    if distance <= 1000 then
                        if currentTween then
                            currentTween:Cancel()
                        end
                        currentTween = TweenService:Create(char.HumanoidRootPart, tweenInfo, {CFrame = ball.CFrame})
                        currentTween:Play()
                    end
                end
            end
        end
    end)
end)

-- Night Mode
UtilitySection:NewToggle("Night Mode", "Toggle night mode", function(state)
    getgenv().NightMode = state
    
    task.spawn(function()
        while task.wait(1) do
            if getgenv().NightMode then
                TweenService:Create(Lighting, TweenInfo.new(3), {ClockTime = 3.9}):Play()
            else
                TweenService:Create(Lighting, TweenInfo.new(3), {ClockTime = 13.5}):Play()
            end
        end
    end)
end)

-- Shop Tab
local ShopTab = Window:NewTab("Shop")
local ShopSection = ShopTab:NewSection("Crates")

-- Buy Crates
ShopSection:NewButton("Buy Sword Crate", "Purchase sword crate", function()
    Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
end)

ShopSection:NewButton("Buy Explosion Crate", "Purchase explosion crate", function()
    Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
end)

-- Auto Buy Toggles
ShopSection:NewToggle("Auto Buy Sword Crate", "Automatically buy sword crates", function(state)
    getgenv().AutoBuySword = state
    
    task.spawn(function()
        while task.wait(0.01) do
            if getgenv().AutoBuySword then
                Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
            end
        end
    end)
end)

ShopSection:NewToggle("Auto Buy Explosion Crate", "Automatically buy explosion crates", function(state)
    getgenv().AutoBuyExplosion = state
    
    task.spawn(function()
        while task.wait(0.01) do
            if getgenv().AutoBuyExplosion then
                Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
            end
        end
    end)
end)

-- Settings Tab
local SettingsTab = Window:NewTab("Settings")
local SettingsSection = SettingsTab:NewSection("Configuration")

SettingsSection:NewSlider("Parry Distance", "Adjust auto parry distance", 1, 20, 10, function(value)
    getgenv().ParryDistance = value
end)

SettingsSection:NewKeybind("Toggle GUI", "Toggle the GUI visibility", Enum.KeyCode.RightControl, function()
    Library:ToggleUI()
end)
